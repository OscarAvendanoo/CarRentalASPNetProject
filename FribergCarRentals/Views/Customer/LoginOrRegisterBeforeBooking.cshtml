@model FribergCarRentals.ViewModel.StartBookingVM
@{
    ViewData["Title"] = "Start Booking";

    // int carId = (int)ViewBag.CarId;
    
}

<div class="container">
    <div class="row">
        <!-- Login Form -->
        <div class="col-md-5 col-sm-5 col-12">
            <div class="d-flex justify-content-center align-items-center" style="margin-top: 10em; margin-bottom: 2em;">
                <h2>Sign in:</h2>
            </div>
            <div class="d-flex justify-content-center align-items-center">
                <form asp-controller="Customer" asp-action="LoginBeforeBook" method="post">
                    @Html.AntiForgeryToken()
                    <!-- Hidden Car ID -->
                    @Html.HiddenFor(model => model.LoginForm.CarId, new { @value = ViewBag.CarId })
                    <!-- Email input -->
                    @Html.LabelFor(model => model.LoginForm.Email, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.LoginForm.Email, new { @class = "form-control", id = "formEmailInput" })
                    @Html.ValidationMessageFor(model => model.LoginForm.Email, "", new { @class = "text-danger" })

                    <!-- Password input -->
                    <div data-mdb-input-init class="form-outline mb-4">
                        @Html.LabelFor(model => model.LoginForm.Password, new { @class = "form-label" })
                        @Html.PasswordFor(model => model.LoginForm.Password, new { @class = "form-control", id = "formPasswordInput" })
                        @Html.ValidationMessageFor(model => model.LoginForm.Password, "", new { @class = "text-danger" })
                    </div>

                    <!-- Remember me and forgot password -->
                    <div class="row mb-4">
                        <div class="col d-flex justify-content-center">
                            <div class="form-check">
                                @Html.CheckBoxFor(model => model.LoginForm.RememberMe, new { @class = "form-check-input", id = "rememberMeCheck" })
                                @Html.LabelFor(model => model.LoginForm.RememberMe, new { @class = "form-check-label" })
                            </div>
                        </div>

                        <div class="col">
                            <a href="#!">Forgot password?</a>
                        </div>
                    </div>

                    <!-- Logga in knapp-->
                    <div class="d-flex justify-content-center align-items-center">
                        <button type="submit" data-mdb-button-init data-mdb-ripple-init class="btn btn-primary btn-block mb-4">Sign in</button>
                    </div>
                </form>
            </div>
            @if (TempData["LoginError1"] != null)
            {
                <div class="alert alert-danger">
                    @TempData["LoginError1"]
                </div>
            }
            @if (TempData["LoginError2"] != null)
            {
                <div class="alert alert-danger">
                    @TempData["LoginError2"]
                </div>
            }

        </div>

        <!-- Andra columen -->
        <div class="col-md-2 col-sm-2 col-12 d-flex justify-content-center align-items-center">
            <h1>OR</h1>
        </div>

        <!-- Registrerings formulär-->
        <div class="col-md-5 col-sm-5 col-12">
            <div class="d-flex justify-content-center align-items-center" style="margin-top: 10em; margin-bottom: 2em;">
                <h2>Register:</h2>
            </div>
            <div class="d-flex justify-content-center align-items-center"> 
                <form asp-controller="Customer" asp-action="RegisterBeforeBook" method="post">
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.RegisterForm.CarId)
                    <label class="form-label" for="firstNameInput">First Name</label>
                    @Html.TextBoxFor(model => model.RegisterForm.FirstName, new { @class = "form-control", id = "firstNameInput" })
                    <label class="form-label" for="lastNameInput">Last Name</label>
                    @Html.TextBoxFor(model => model.RegisterForm.LastName, new { @class = "form-control", id = "lastNameInput" })
                    <label class="form-label" for="registerFormEmailInput">Email address</label>
                    @Html.TextBoxFor(model => model.RegisterForm.Email, new { @class = "form-control", id = "registerFormEmailInput" })
                    <label class="form-label" for="registerFormPasswordInput">Password</label>
                    @Html.PasswordFor(model => model.RegisterForm.Password, new { @class = "form-control", id = "registerFormPasswordInput" })

                    <div class="d-flex justify-content-center align-items-center mt-4">
                        <button type="submit" class="btn btn-primary btn-block mb-4">Register</button>
                    </div>
                </form>
            </div>
            <div>
                <!-- Hämtar Error från temp data i det fall registreringen inte fungerar -->
                @if (TempData["ErrorRegister1"] != null)
                {
                    <div class="alert alert-danger">
                        @TempData["ErrorRegister1"]
                    </div>
                }
                @if (TempData["ErrorRegister2"] != null)
                {
                    <div class="alert alert-danger">
                        @TempData["ErrorRegister2"]
                    </div>
                }
            </div>
        </div>
    </div>
</div>
